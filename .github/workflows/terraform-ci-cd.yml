name: Terraform CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  terraform-validate:
    name: Terraform Validation
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4
      
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: 1.5.0
        
    - name: Terraform Format Check
      run: terraform fmt -check -recursive
      
    - name: Terraform Init
      run: terraform init -backend=false
      
    - name: Terraform Validate
      run: terraform validate
      
    - name: Security Scan with Checkov
      uses: bridgecrewio/checkov-action@master
      with:
        directory: .
        framework: terraform
        output_format: cli
        quiet: true

  terraform-plan:
    name: Terraform Plan
    runs-on: ubuntu-latest
    needs: terraform-validate
    if: github.event_name == 'pull_request'
    
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4
      
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: 1.5.0
        
    - name: Terraform Init
      run: terraform init -backend=false
      
    - name: Terraform Plan
      run: |
        terraform plan \
          -var="bucket_name=test-bucket-$(date +%s)" \
          -var="aws_region=us-east-1" \
          -no-color
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

  cost-estimation:
    name: Infrastructure Cost Estimation
    runs-on: ubuntu-latest
    needs: terraform-validate
    if: github.event_name == 'pull_request'
    
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4
      
    - name: Setup Infracost
      uses: infracost/actions/setup@v2
      with:
        api-key: ${{ secrets.INFRACOST_API_KEY }}
        
    - name: Generate Cost Estimate
      run: |
        infracost breakdown --path . \
          --terraform-var bucket_name=test-bucket \
          --terraform-var aws_region=us-east-1
        
  notify-torque:
    name: Notify Torque of Changes
    runs-on: ubuntu-latest
    needs: [terraform-validate, terraform-plan]
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    steps:
    - name: Trigger Torque Environment Update
      run: |
        echo "Code changes detected in main branch"
        echo "Torque environment should sync automatically"
        echo "Manual verification recommended in Torque dashboard"
        
    - name: Create Deployment Summary
      run: |
        echo "## Deployment Summary" >> $GITHUB_STEP_SUMMARY
        echo "- âœ… Terraform validation passed" >> $GITHUB_STEP_SUMMARY
        echo "- âœ… Security scan completed" >> $GITHUB_STEP_SUMMARY
        echo "- âœ… Format check passed" >> $GITHUB_STEP_SUMMARY
        echo "- ðŸš€ Ready for Torque deployment" >> $GITHUB_STEP_SUMMARY
